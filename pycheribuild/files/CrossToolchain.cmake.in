#
# Copyright (c) 2016-2020 Alex Richardson
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory under DARPA/AFRL contract FA8750-10-C-0237
# ("CTSRD"), as part of the DARPA CRASH research programme.
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory (Department of Computer Science and
# Technology) under DARPA contract HR0011-18-C-0016 ("ECATS"), as part of the
# DARPA SSITH research programme.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
@COMMENT_IF_NATIVE@set(CMAKE_SYSTEM_NAME @TOOLCHAIN_SYSTEM_NAME@)

@COMMENT_IF_NATIVE@set(CMAKE_SYSTEM_VERSION "@TOOLCHAIN_SYSTEM_VERSION@")
@COMMENT_IF_NATIVE@set(CMAKE_SYSTEM_PROCESSOR "@TOOLCHAIN_SYSTEM_PROCESSOR@")

if(CMAKE_VERSION VERSION_LESS "3.9")
    message(FATAL_ERROR "This toolchain file requires CMake >= 3.9")
endif()

set(CHERI_SDK_BINDIR "@TOOLCHAIN_SDK_BINDIR@")
# Allow compiler dir to be different from toolchain directory (e.g. LLVM build dir)
set(CHERI_COMPILER_BINDIR "@TOOLCHAIN_COMPILER_BINDIR@")
set(CHERIBSD_SYSROOT "@TOOLCHAIN_SYSROOT@")
# add the correct --sysroot:
# https://cmake.org/cmake/help/git-master/variable/CMAKE_SYSROOT.html
set(CMAKE_SYSROOT ${CHERIBSD_SYSROOT})

set(CMAKE_AR "@TOOLCHAIN_AR@" CACHE FILEPATH "ar")
set(CMAKE_RANLIB "@TOOLCHAIN_RANLIB@" CACHE FILEPATH "ranlib")
set(CMAKE_NM "@TOOLCHAIN_NM@" CACHE FILEPATH "nm")
set(CMAKE_STRIP "@TOOLCHAIN_STRIP@" CACHE FILEPATH "strip")

# specify the cross compiler
set(CMAKE_C_COMPILER "@TOOLCHAIN_C_COMPILER@")
set(CMAKE_C_COMPILER_TARGET "@TOOLCHAIN_TARGET_TRIPLE@")

set(CMAKE_CXX_COMPILER "@TOOLCHAIN_CXX_COMPILER@")
set(CMAKE_CXX_COMPILER_TARGET "@TOOLCHAIN_TARGET_TRIPLE@")

set(CMAKE_ASM_COMPILER "@TOOLCHAIN_C_COMPILER@")
set(CMAKE_ASM_COMPILER_TARGET "@TOOLCHAIN_TARGET_TRIPLE@")
# https://gitlab.kitware.com/cmake/cmake/issues/18575
if (CMAKE_VERSION VERSION_LESS "3.13")
    set(CMAKE_ASM_COMPILER_ID "Clang")  # for some reason CMake doesn't detect this automatically
endif()

set(CHERIBSD_COMMON_FLAGS "@TOOLCHAIN_COMMON_FLAGS@")
set(CHERIBSD_LINK_FLAGS "@TOOLCHAIN_LINKER_FLAGS@")
# https://cmake.org/cmake/help/git-master/variable/CMAKE_TRY_COMPILE_PLATFORM_VARIABLES.html
set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES CHERI_SDK_BINDIR CHERIBSD_SYSROOT CHERIBSD_COMMON_FLAGS CHERIBSD_LINK_FLAGS LIB_SUFFIX PKG_CONFIG_USE_CMAKE_PREFIX_PATH)

# CMake 3.7 has new variables that we can use to correctly initialize these flags
# https://cmake.org/cmake/help/git-master/release/3.7.html#variables
set(CMAKE_EXE_LINKER_FLAGS_INIT    "${CHERIBSD_LINK_FLAGS}")
set(CMAKE_SHARED_LINKER_FLAGS_INIT "${CHERIBSD_LINK_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS_INIT "${CHERIBSD_LINK_FLAGS}")
# These flags are passed to ar -> not what we want
# set(CMAKE_STATIC_LINKER_FLAGS_INIT "${CHERIBSD_LINK_FLAGS}")
set(CMAKE_C_FLAGS_INIT   "${CHERIBSD_COMMON_FLAGS} @TOOLCHAIN_C_FLAGS@")
set(CMAKE_ASM_FLAGS_INIT "${CHERIBSD_COMMON_FLAGS} @TOOLCHAIN_ASM_FLAGS@")
set(CMAKE_CXX_FLAGS_INIT "${CHERIBSD_COMMON_FLAGS} @TOOLCHAIN_CXX_FLAGS@")

if(@TOOLCHAIN_FORCE_STATIC@)
    # Don't let find modules find .so files
    set(CMAKE_SHARED_LIBRARY_SUFFIX ".a")
    set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
    set(CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES ".a")
    # Note: project() overwrites CMAKE_FIND_LIBRARY_SUFFIXES, but we can use
    # CMAKE_PROJECT_INCLUDE (added in 3.15) to reload this file after project().
    # See https://gitlab.kitware.com/cmake/cmake/-/issues/21942#note_921012
    set(CMAKE_PROJECT_INCLUDE "@TOOLCHAIN_FILE_PATH@")
    if(CMAKE_VERSION VERSION_LESS "3.15")
        message(FATAL_ERROR "This toolchain file requires CMake >= 3.15")
    endif()
endif()

# where is the target environment
set(CMAKE_FIND_ROOT_PATH ${CHERIBSD_SYSROOT})
# search for programs in the build host directories
set(PKG_CONFIG_USE_CMAKE_PREFIX_PATH FALSE)
# PKG_CONFIG_LIBDIR overrides PKG_CONFIG_PATH
set(PKG_CONFIG_LIBDIR "@TOOLCHAIN_PKGCONFIG_DIRS@")
set(ENV{PKG_CONFIG_LIBDIR} "@TOOLCHAIN_PKGCONFIG_DIRS@")
set(PKG_CONFIG_SYSROOT_DIR ${CHERIBSD_SYSROOT})
set(ENV{PKG_CONFIG_SYSROOT_DIR} ${CHERIBSD_SYSROOT})
set(PKG_CONFIG_PATH "")
set(ENV{PKG_CONFIG_PATH} "")

# Use -pthread flag https://gitlab.kitware.com/cmake/cmake/issues/16920
set(THREADS_HAVE_PTHREAD_ARG TRUE)


# Ensure we search in the custom install prefix that we install everything to:
set(CMAKE_PREFIX_PATH "@TOOLCHAIN_CMAKE_PREFIX_PATH@;${CMAKE_PREFIX_PATH}")
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
