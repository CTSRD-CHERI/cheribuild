#!/bin/sh
#-
# Copyright (c) 2017 Alexandre Joannou
# Copyright (c) 2018 Alex Richardson
# All rights reserved.
#
# This software was developed by SRI International and the University of
# Cambridge Computer Laboratory under DARPA/AFRL contract FA8750-10-C-0237
# ("CTSRD"), as part of the DARPA CRASH research programme.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

echo "Setting up sysctls"
/sbin/sysctl -f /etc/sysctl.conf
# echo "Setting polling user_frac to 99"

echo "mount / rw"
/sbin/mount -o rw /

if [ -n "$(kenv -q cheribuild.skip_entropy)" ]; then
    echo "Skipping entropy seeding since cheribuild.skip_entropy was set"
elif [ ! -w "/dev/random" ]; then
    echo "Not seeding initial entropy since /dev/random is not writable"
else
    for f in /boot/entropy /entropy /var/db/entropy/*; do
        if [ -f "$f" ] && [ -r "$f" ] && [ -s "$f" ]; then
            if dd if="$f" of=/dev/random bs=4096 2>/dev/null; then
                echo "entropy read from $f"
                rm -f "$f"
            fi
        fi
    done
fi

MDSZ=500m
echo "create $MDSZ TMPFS at /tmp"
mkdir -p /tmp
mount -t tmpfs -o size=$MDSZ tmpfs /tmp
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

setup_network() {
    if /sbin/ifconfig -l | grep "$1"; then
        echo "ifconfig" "$@"
        /sbin/ifconfig "$@"

        echo "run dhclient on $1"
        /sbin/dhclient "$1"
    fi
}

setup_network atse0 polling # FPGA needs polling
setup_network le0           # QEMU (Malta)
setup_network vtnet0        # QEMU (virtio)

echo "set up loopback"
/sbin/ifconfig lo0 inet 127.0.0.1 up

BENCHDIR=/tmp/benchdir
mkdir $BENCHDIR
chmod 777 $BENCHDIR

if [ -n "$(kenv -q cheribuild.skip_sshd)" ]; then
    echo "Not starting sshd since cheribuild.skip_sshd was set"
else
    echo "generate host keys"
    for alg in rsa ecdsa ed25519; do
        keyfile="/etc/ssh/ssh_host_${alg}_key"
        if [ ! -e "$keyfile" ]; then
            ssh-keygen -t $alg -f "$keyfile" -N ""
        fi
        # ssh-keygen -l -f "$keyfile.pub"
    done
    echo "start sshd"
    /usr/sbin/sshd
fi


echo "Logging in as root..."
/usr/bin/login -f root
echo "exec /bin/sh"
exec /bin/sh
